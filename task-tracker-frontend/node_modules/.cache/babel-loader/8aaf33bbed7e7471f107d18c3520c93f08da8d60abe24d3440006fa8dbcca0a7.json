{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Unmesh\\\\Desktop\\\\task-tracker2\\\\task-tracker-frontend\\\\src\\\\components\\\\Dashboard\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../api.js\";\nimport TaskList from \"./TaskList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [selected, setSelected] = useState(null);\n  const fetchProjects = async () => {\n    const res = await API.get(\"/projects\");\n    setProjects(res.data);\n  };\n  const handleCreate = async () => {\n    await API.post(\"/projects\", {\n      title\n    });\n    setTitle(\"\");\n    fetchProjects();\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Your Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setSelected(p._id),\n        children: p.title\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), selected && /*#__PURE__*/_jsxDEV(TaskList, {\n      projectId: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"0ZRVUh9p57luhq9aACL4fQpl8Zg=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","API","TaskList","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","title","setTitle","selected","setSelected","fetchProjects","res","get","data","handleCreate","post","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","p","_id","projectId","_c","$RefreshReg$"],"sources":["C:/Users/Unmesh/Desktop/task-tracker2/task-tracker-frontend/src/components/Dashboard/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../api.js\";\r\nimport TaskList from \"./TaskList.js\";\r\n\r\nconst ProjectList = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const fetchProjects = async () => {\r\n    const res = await API.get(\"/projects\");\r\n    setProjects(res.data);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    await API.post(\"/projects\", { title });\r\n    setTitle(\"\");\r\n    fetchProjects();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2> Your Projects</h2>\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"New Project\"\r\n      />\r\n      <button onClick={handleCreate}>Add</button>\r\n      <ul>\r\n        {projects.map((p) => (\r\n          <li key={p._id} onClick={() => setSelected(p._id)}>\r\n            {p.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {selected && <TaskList projectId={selected} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAOC,QAAQ,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,WAAW,CAAC;IACtCP,WAAW,CAACM,GAAG,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMhB,GAAG,CAACiB,IAAI,CAAC,WAAW,EAAE;MAAET;IAAM,CAAC,CAAC;IACtCC,QAAQ,CAAC,EAAE,CAAC;IACZG,aAAa,CAAC,CAAC;EACjB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MACEoB,KAAK,EAAEf,KAAM;MACbgB,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAa;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFnB,OAAA;MAAQyB,OAAO,EAAEZ,YAAa;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACuB,GAAG,CAAEC,CAAC,iBACd3B,OAAA;QAAgByB,OAAO,EAAEA,CAAA,KAAMjB,WAAW,CAACmB,CAAC,CAACC,GAAG,CAAE;QAAAb,QAAA,EAC/CY,CAAC,CAACtB;MAAK,GADDsB,CAAC,CAACC,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJZ,QAAQ,iBAAIP,OAAA,CAACF,QAAQ;MAAC+B,SAAS,EAAEtB;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}